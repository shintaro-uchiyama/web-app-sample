version: "3.9"
services:
  web-sales:
    container_name: web-sales
    build:
      context: ./frontend/web/sales
    volumes:
      - ./frontend/web/sales:/usr/src/app
      # use node_modules in container
      - /usr/src/app/node_modules
    ports:
      - "3000:3000"
  backend-sales:
    container_name: backend-sales
    build:
      context: ./backend/sales
    volumes:
      - ./backend/sales:/app
    ports:
      - "8080:8080"
    environment:
      POSTGRES_USER: ${WEBAPP_POSTGRES_USER:?err}
      POSTGRES_DB: ${WEBAPP_POSTGRES_DB:?err}
      POSTGRES_PASSWORD: ${WEBAPP_POSTGRES_PASSWORD:?err}
  backend-websocket:
    container_name: backend-websocket
    build:
      context: ./backend/websocket
    volumes:
      - ./backend/websocket:/app
    ports:
      - "8081:8080"
    depends_on:
      - dynamodb
    links:
      - "dynamodb"
    environment:
      AWS_ACCESS_KEY_ID: "DUMMYIDEXAMPLE"
      AWS_SECRET_ACCESS_KEY: "DUMMYEXAMPLEKEY"
      REGION: "ap-northeast-1"
      DYNAMO_ENDPOINT: http://dynamodb:8000
  backend-rdbms:
    image: postgres:14.2
    container_name: backend-rdbms
    restart: always
    environment:
      POSTGRES_USER: ${WEBAPP_POSTGRES_USER:?err}
      POSTGRES_DB: ${WEBAPP_POSTGRES_DB:?err}
      POSTGRES_PASSWORD: ${WEBAPP_POSTGRES_PASSWORD:?err}
      TZ: "Asia/Tokyo"
    ports:
      - 5432:5432
    volumes:
      - backend-rdbms:/var/lib/postgresql/data
  backend-rdbms-admin:
    image: dpage/pgadmin4:6.7
    container_name: pgadmin
    restart: always
    ports:
      - 81:80
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin@example.com
      PGADMIN_DEFAULT_PASSWORD: ${WEBAPP_PGADMIN_DEFAULT_PASSWORD:?err}
    volumes:
      - pgadmin:/var/lib/pgadmin
    depends_on:
      - backend-rdbms
  backend-rdbms-document:
    image: nginx:1.21.6-alpine
    container_name: db-document
    ports:
      - 82:80
    volumes:
      - ./sales/cmd/db-document/output:/usr/share/nginx/html
  backend-sales-document:
    image: redocly/redoc:v2.0.0-rc.74
    container_name: api-ducument
    ports:
      - 83:80
    volumes:
      - ./sales/cmd/api-document/openapi.yml:/usr/share/nginx/html/openapi.yml
    environment:
      SPEC_URL: openapi.yml
  backend-websocket-no-sql:
    image: amazon/dynamodb-local:1.18.0
    user: root
    command: -jar DynamoDBLocal.jar -sharedDb -dbPath ./data
    container_name: dynamodb
    ports:
      - "8000:8000"
    volumes:
      - dynamodb:/home/dynamodblocal/data
    working_dir: /home/dynamodblocal
  backend-websocket-no-sql-admin:
    container_name: dynamodb-admin
    image: aaronshaf/dynamodb-admin:4.4.0
    environment:
      - DYNAMO_ENDPOINT=dynamodb:8000
    ports:
      - 8001:8001
    depends_on:
      - dynamodb
volumes:
  backend-rdbms:
  pgadmin:
  dynamodb:
